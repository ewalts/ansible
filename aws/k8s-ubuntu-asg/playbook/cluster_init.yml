---

- hosts: ec2hosts
  gather_facts: false
  tasks:

    - name: Wait for ssh
      ansible.builtin.wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

    - name: Start kubelet
      ansible.builtin.shell: |
        sudo systemctl enable kubelet
        sudo systemctl start kubelet

    - name: Initialize k8s cluster
      ansible.builtin.shell: | 
        sudo kubeadm init --pod-network-cidr=10.96.0.0/16
      register: kubernetes_init_output

    - debug:
        msg: "{{ kubernetes_init_output.stdout }}"

    - name: Create .kube directory
      ansible.builtin.file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: Create kube user kubeconfig file from admin.conf
      become: true
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ my_user }}/.kube/config"
        remote_src: yes
        owner: "{{ my_user }}"
        group: "{{ my_group }}"

    - name: Copy custom settings for Calico
      become: true
      copy:
        src: custom-resources.yaml
        dest: /tmp/custom-resources.yaml
        owner: "{{ my_user }}"
        group: "{{ my_group }}"
        mode: 0644

    - name: Install CNI plugin Tigera Operator Calico
      ansible.builtin.shell: |
        kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.26.3/manifests/tigera-operator.yaml

    - name: Delay play after Tigera 
      ansible.builtin.wait_for:
        timeout: 300

    - name: Customize settings
      ansible.builtin.shell: |
        kubectl apply -f /tmp/custom-resources.yaml

    - name: Create join token for worker nodes
      ansible.builtin.shell: |
        sudo kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - debug:
        msg: "{{ kubernetes_join_command.stdout }}"

    - name: Save join command to S3.
      amazon.aws.s3_object:
        bucket: "{{ s3_bucket }}"
        mode: put
        object: kubernetes_join_command 
        content: "{{ kubernetes_join_command.stdout_lines[0] }}" 

#    - name: Save join command to local file.
#      become: true
#      delegate_to: localhost
#      connection: local
#      copy:
#        content: "{{ kubernetes_join_command.stdout_lines[0] }}"
#        dest: /tmp/kubernetes_join_command
#        mode: 0777
#        owner: "{{ my_user }}"
#        group: "{{ my_group }}"
#
