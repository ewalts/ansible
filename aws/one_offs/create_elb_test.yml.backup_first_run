---
- name: Create ELB for Nagios Web Front-end
  hosts: localhost
  gather_facts: False


  tasks:

    - name: create auto classic elb for http
      amazon.aws.elb_classic_lb:
        state: present
        name: 'NAG Web Front ELB'
        security_group_ids: 'sg-0c18d8d383c8a4184'
        subnets: 'subnet-064aea0316801219e'
        purge_subnets: true
        zones:
          - us-west-2c
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
        stickiness:
          type: loadbalancer
          enabled: true
          expiration: 300




PLAY [Create ELB for Nagios Web Front-end] *******************************************************************************************************************************************************************************************************************

TASK [create auto classic elb for http] **********************************************************************************************************************************************************************************************************************







####################################################################################################################################################################################################################ZZ

>>>>>>  fatal: [localhost]: FAILED! => {"ansible_facts": {"discovered_interpreter_python": "/usr/bin/python3"}, "changed": false, "msg": "parameters are mutually exclusive: zones|subnets"}






PLAY RECAP ***************************************************************************************************************************************************************************************************************************************************
localhost                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

