---
- hosts: nginx
  vars_files:
    - /home/eric/wrk/dev-ops/ansible/aws/nginx/vars/composev2_vars.yml
  gather_facts: false
  become: true
  tasks:
    - name: Wait for ssh
      ansible.builtin.wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

    - name: Update packages
      shell: |
        apt-get -y update

    - name: install docker 
      shell: |
        apt-get -y install pip rsync docker.io docker-compose
        pip install docker
        systemctl start containerd

    - name: Docker is present
      ansible.builtin.package:
        name: docker
        state: present

    - name: Create build directory
      shell: 
        mkdir /home/ubuntu/nginx

    - name: Copy docker build
      ansible.builtin.copy:
        src: "{{ src_dir }}/docker-compose.yml"
        dest: "{{ dest_dir }}/docker-compose.yml"

    - name: Copy docker build
      ansible.builtin.copy:
        src: "{{ src_dir }}/Dockerfile"
        dest: "{{ dest_dir }}/Dockerfile"



    - name: Remove nginx project
      community.docker.docker_compose:
        project_src: /home/ubuntu/nginx
        state: absent

    - name: Start nginx project with inline definition
      community.docker.docker_compose:
        project_name: nginx
        definition:
          version: '2'
          services:
            web:
              build: "/home/ubuntu/nginx"
              command: "sudo python manage.py runserver 0.0.0.0:80"
              volumes:
                - "/home/ubuntu/nginx/www/html:/var/www/html"
              ports:
                - "80:80"
      register: output

    - name: Show results
      ansible.builtin.debug:
        var: output

    - name: Verify that the web service is running
      ansible.builtin.assert:
        that:
          - "output.services.web.nginx_web_1.state.running"
